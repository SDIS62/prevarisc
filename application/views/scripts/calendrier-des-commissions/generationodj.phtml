<?php

$consonne = array("a", "e", "i", "o", "u", "y", "A", "E", "I", "O", "U", "Y");
if(count($this->membresFiles) == 0){
	echo "<span id='notif' class='ui-state-error' style='padding: 0.3em;'>Aucun membre n'a été renseigné pour la commission</span><br/><br/><br/>";
	return false;
}
foreach($this->membresFiles as $val => $membre){
	//On boucle sur les membres
	if($membre->ID_GROUPEMENT == NULL){
		//génération du document par commune pour les maires par exemple		
		//si le document concernant ce membre existe alors on rentre dans la boucle
			$nomFichier = $membre->ID_COMMISSIONMEMBRE."ODJ_".$membre->COURRIER_ODJ;
			if (file_exists(REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."courriers".DIRECTORY_SEPARATOR.$nomFichier)){
				$odf = new Odf(REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."courriers".DIRECTORY_SEPARATOR.$nomFichier);
				//Generation du segment membres
				$membreLoop = $odf->setSegment('membresComm');

				foreach($this->listeCommunes as $val => $commune){
					//LIBELLE COMMUNE = 0
					//Array des infos de la commune = 1
					if(isset($commune[0])){
						$firstLetter = $commune[0]{0}; 
						if(in_array($firstLetter, $consonne)){
							$communeShow = "d'".$commune[0];
						}else{
							$communeShow = "de ".$commune[0];
						}
						
						if(count($commune[1]) == 1){
							foreach($commune[1] as $comm => $info){	
								addChamp($membreLoop,'numMairie',$info["NUMEROADRESSE_UTILISATEURINFORMATIONS"]);
								addChamp($membreLoop,'rueMairie',$info["RUEADRESSE_UTILISATEURINFORMATIONS"]);
								addChamp($membreLoop,'cpMairie',$info["CPADRESSE_UTILISATEURINFORMATIONS"]);
								addChamp($membreLoop,'communeMairie',$info["VILLEADRESSE_UTILISATEURINFORMATIONS"]);
							}
						}else{
							addChamp($membreLoop,'numMairie','');
							addChamp($membreLoop,'rueMairie','');
							addChamp($membreLoop,'cpMairie','');
							addChamp($membreLoop,'communeMairie','');
							echo "<span id='notif' class='ui-state-error' style='padding: 0.3em;'>Le contact de la commune ".$commune[0]." n'a pas été renseigné</span><br/><br/><br/>";
						}
					}

					addChamp($membreLoop,'commissionNom',$this->commissionInfos[0]['LIBELLE_COMMISSION']);
					
                    $dateDuJour = new Zend_Date();
                    addChamp($membreLoop,'date',$dateDuJour->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR));
										
					$dateComm = new Zend_Date($this->dateComm);
					addChamp($membreLoop,'dateCommission',$dateComm->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR));
					
					$heureCommTab = explode(":",$this->heureDeb);
					$heureComm = $heureCommTab[0].":".$heureCommTab[1];
					addChamp($membreLoop,'heureDebutComm',$heureComm);

					//ICI FOREACH SUR LES DOSSIERS DE LA COMMUNE
					//Generation du segment pour l'affichage des différentes infos du dossier	
					foreach($this->dossierComm as $val => $dossierInfos){
                        retrieveInfoDoss($membreLoop, $dossierInfos);
                        $membreLoop->infosDoss->merge(); 
					}
					$membreLoop->merge();
				}
				$odf->mergeSegment($membreLoop);
				$nouvellePJ = savePj($this->idComm,$membre->LIBELLE_COMMISSIONMEMBRE);
                                $store = Zend_Controller_Front::getInstance()->getParam('bootstrap')->getResource('dataStore');
                                $path = $store->getFilePath($nouvellePJ, 'dateCommission', $this->idComm, true);
				$odf->saveToDisk($path);
				echo "<span id='notif' class='ui-state-highlight ui-corner-all' style='padding: 0.3em;'>L'ordre du jour pour le membre : ".$membre->LIBELLE_COMMISSIONMEMBRE." à bien été généré </span><br/><br/><br/>";

			}else{
				echo "<span id='notif' class='ui-state-error' style='padding: 0.3em;'>Le fichier pour le membre : ".$membre->LIBELLE_COMMISSIONMEMBRE." n'a pas été renseigné</span><br/><br/><br/>";
			}
		
	}else{
		//génération du document par groupement de commune pour les gendarmerie/police par exemple

			//si le membre du groupement en question posède un document le concernant on génére la convocation
			$nomFichier = $membre->ID_COMMISSIONMEMBRE."ODJ_".$membre->COURRIER_ODJ;
			if (file_exists(REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."courriers".DIRECTORY_SEPARATOR.$nomFichier)){
				$odf = new Odf(REAL_DATA_PATH.DIRECTORY_SEPARATOR."uploads".DIRECTORY_SEPARATOR."courriers".DIRECTORY_SEPARATOR.$nomFichier);

				$model_groupement = new Model_DbTable_Groupement();
				$infosGroupement = $model_groupement->get($membre->ID_GROUPEMENT);

				$grpLoop = $odf->setSegment('grpLoop');

				addChamp($grpLoop,'commissionNom',$this->commissionInfos[0]['LIBELLE_COMMISSION']);
				
				$dateDuJour = new Zend_Date();
				addChamp($grpLoop,'date',$dateDuJour->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR));
				//echo "groupement info : ".$infosGroupement["RUEADRESSE_UTILISATEURINFORMATIONS"];
				addChamp($grpLoop,'communeGrp',$infosGroupement["VILLEADRESSE_UTILISATEURINFORMATIONS"]);
				addChamp($grpLoop,'numGrp',$infosGroupement["NUMEROADRESSE_UTILISATEURINFORMATIONS"]);
				addChamp($grpLoop,'rueGrp',$infosGroupement["RUEADRESSE_UTILISATEURINFORMATIONS"]);
				addChamp($grpLoop,'cpGrp',$infosGroupement["CPADRESSE_UTILISATEURINFORMATIONS"]);
				$dateComm = new Zend_Date($this->dateComm);
				//echo $dateComm->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR)." - ".$this->heureDeb." <br/><br/><br/>";
				addChamp($grpLoop,'dateCommission',$dateComm->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR));
				addChamp($grpLoop,'heureDebutComm',$this->heureDeb);

				//On commence par parcourir les dossier pour récuperer la ville concernée
				foreach($this->dossierComm as $val => $dossierInfos){
					//On parcour la liste des ville du groupement concerné pour comparer avec la ville du dossier
                                    retrieveInfoDoss($grpLoop, $dossierInfos);
                                    $grpLoop->infosDoss->merge(); 

				}
				$grpLoop->merge();
				$odf->mergeSegment($grpLoop);
				$nouvellePJ = savePj($this->idComm,$membre->LIBELLE_COMMISSIONMEMBRE);
                                $store = Zend_Controller_Front::getInstance()->getParam('bootstrap')->getResource('dataStore');
                                $path = $store->getFilePath($nouvellePJ, 'dateCommission', $this->idComm, true);
				$odf->saveToDisk($path);
				echo "<span id='notif' class='ui-state-highlight ui-corner-all' style='padding: 0.3em;'>L'ordre du jour pour le membre : ".$membre->LIBELLE_COMMISSIONMEMBRE." à bien été généré </span><br/><br/><br/>";
			}else{
				echo "<span id='notif' class='ui-state-error' style='padding: 0.3em;'>Le fichier pour le membre : ".$membre->LIBELLE_COMMISSIONMEMBRE." n'a pas été renseigné</span><br/><br/><br/>";
			}
	}
}



function addChamp($odfName, $nomOdf, $variable){
    try{
        $odfName->setVars($nomOdf,$variable,true,'UTF8');		
    }catch (Exception $e) {
    }
}

function retrieveInfoDoss($segment, $dossierInfos) {
    $typeDossierCourt = 'F';

    switch($dossierInfos['TYPE_DOSSIER']){
        case 1 :
            $typeDossierCourt = 'E';
            break;
        case 2 :
        case 3 :
            $typeDossierCourt = 'V';
            break;
        default :
            $typeDossierCourt = 'A';
            break;
    }
    addChamp($segment->infosDoss, 'idDossier', $dossierInfos["ID_DOSSIER"]);
    addChamp($segment->infosDoss, 'avisDossier', getAvis($dossierInfos["AVIS_DOSSIER"]));
    addChamp($segment->infosDoss, 'nomEtab', $dossierInfos['infosEtab']['informations']["LIBELLE_ETABLISSEMENTINFORMATIONS"]);
    addChamp($segment->infosDoss, 'numWinPrev', $dossierInfos['infosEtab']['general']['NUMEROID_ETABLISSEMENT']);
    if(isset($dossierInfos['infosEtab']['parents'][0]) && $dossierInfos['infosEtab']['parents'][0]["LIBELLE_ETABLISSEMENTINFORMATIONS"] != NULL) {
        addChamp($segment->infosDoss, 'nomPereEtab', $dossierInfos['infosEtab']['parents'][0]["LIBELLE_ETABLISSEMENTINFORMATIONS"]);
    }
    addChamp($segment->infosDoss, 'natureDossier', $dossierInfos["LIBELLE_DOSSIERNATURE"]);
    addChamp($segment->infosDoss, 'objetDossier', $dossierInfos["OBJET_DOSSIER"]);
    $commune = "";
    if (count($dossierInfos["infosEtab"]["adresses"]) > 0) {
        $commune = $dossierInfos["infosEtab"]["adresses"][0]["LIBELLE_COMMUNE"];
    }
    addChamp($segment->infosDoss, 'communeConcerne', $commune);
    $adresse = "";
    if ($dossierInfos['infosEtab']["adresses"]){
    $adresse = $dossierInfos['infosEtab']["adresses"][0]["NUMERO_ADRESSE"]." ";
        $adresse .= $dossierInfos['infosEtab']["adresses"][0]["LIBELLE_RUE"]." ";
        $adresse .= $dossierInfos['infosEtab']["adresses"][0]["CODEPOSTAL_COMMUNE"]." ";
        $adresse .= $dossierInfos['infosEtab']["adresses"][0]["LIBELLE_COMMUNE"];
    }
    addChamp($segment->infosDoss, 'etablissementAdresse', $adresse);
    
    if(isset($dossierInfos["HEURE_DEB_AFFECT"])){
        $heureDebutTab = explode(":",$dossierInfos["HEURE_DEB_AFFECT"]);
        $heureDebut = $heureDebutTab[0].":".$heureDebutTab[1];
    }else{
        $heureDebut = "";
    }
    addChamp($segment->infosDoss, 'heureDebDossier', $heureDebut);
    if(isset($dossierInfos["HEURE_FIN_AFFECT"])){
	$heureFinTab = explode(":",$dossierInfos["HEURE_FIN_AFFECT"]);
        $heureFin = $heureFinTab[0].":".$heureFinTab[1];
     }else{
        $heureFin = "";
    }
    addChamp($segment->infosDoss, 'heureFinDossier', $heureFin);
    $listeDocUrba = "";
    foreach($dossierInfos["listeDocUrba"] as $va => $docurb){
        $listeDocUrba .= $docurb['NUM_DOCURBA']."    ";
    }
    addChamp($segment->infosDoss, 'numDocUrba', $listeDocUrba);
    addChamp($segment->infosDoss, 'typeDossierCourt', $typeDossierCourt);
    $listePreventioniste = array();
    $listeTelPreventioniste = array();
    foreach($dossierInfos["preventionnistes"] as $va => $preventioniste){
	$listePreventioniste[] = $preventioniste['NOM_UTILISATEURINFORMATIONS']. " ".$preventioniste['PRENOM_UTILISATEURINFORMATIONS'];
        $listeTelPreventioniste[] = $preventioniste['TELFIXE_UTILISATEURINFORMATIONS'];
    }
    addChamp($segment->infosDoss, 'preventionnistes', implode(', ', $listePreventioniste));
    addChamp($segment->infosDoss, 'listeTelPreventioniste', implode(', ', $listeTelPreventioniste)); 
}

function savePj($dateCommId,$libelleMembre){
	//ENREGISTEMENT DANS PIECE JOINTES
	//echo "on enregistre ici";
	$dateDuJour = new Zend_Date();
	$DBpieceJointe = new Model_DbTable_PieceJointe;
	$nouvellePJ = $DBpieceJointe->createRow();
	$nouvellePJ->NOM_PIECEJOINTE = "Ordre du jour";
	$nouvellePJ->EXTENSION_PIECEJOINTE = ".odt";
	$nouvellePJ->DESCRIPTION_PIECEJOINTE = "Ordre du jour générée ".$libelleMembre." ".$dateDuJour->get(Zend_Date::DAY."/".Zend_Date::MONTH."/".Zend_Date::YEAR." à ".Zend_Date::HOUR.":".Zend_Date::MINUTE);
	$nouvellePJ->DATE_PIECEJOINTE = $dateDuJour->get(Zend_Date::YEAR."-".Zend_Date::MONTH."-".Zend_Date::DAY." ".Zend_Date::HOUR.":".Zend_Date::MINUTE.":".Zend_Date::SECOND);
	$nouvellePJ->save();
	
	//ENREGISTREMENT DE LA PIECE JOINTE DANS DATECOMMISSIONPJ

	$DBsave = new Model_DbTable_DateCommissionPj;
	$linkPj = $DBsave->createRow();
	$linkPj->ID_DATECOMMISSION = $dateCommId;
	$linkPj->ID_PIECEJOINTE = $nouvellePJ->ID_PIECEJOINTE;
	$linkPj->save();

	return $nouvellePJ;
}

function getAvis($avis) {
    $avisInt = (int) $avis;
    
    if ($avisInt == 0) {
        return "";
    } else if ($avisInt == 1) {
        return "Favorable";
    } else if ($avisInt == 2) {
        return "Défavorable";
    }
}
