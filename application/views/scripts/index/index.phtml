<div id="home" class="dashboard">
    <?php foreach($this->blocs as $id => $bloc): ?>
        <?php echo $this->partial('index/partials/'.$bloc['type'].'_bloc.phtml', array_merge($bloc, array('id' => $id))) ?>
    <?php endforeach ?>
    <div class="grid-gutter"></div>

</div>

<div id="reponse-modal" class="modal hide fade" ></div>

<br>

<script type="text/javascript">
    $(document).ready(function() {

        // Gestion des boites modales
        $("a[data-toggle='modal']").click(function() {
            var target = $(this).attr("data-target");
            var url = $(this).attr("href");
            $(target).load(url);
        });

        $container = $('.dashboard').packery({
            itemSelector: '.panel',
            gutter: '.grid-gutter',
            // disable initial layout
            isInitLayout: false
        });

        var pckry = $container.data('packery');

        // ----- initial sort ----- //
        var sortOrder = []; // global variable for saving order, used later
        var storedSortOrder = <?php echo json_encode($this->blocsOrder) ?>;
        if ( storedSortOrder ) {
            // create a hash of items by their tabindex
            var itemsByTabIndex = {};
            var tabIndex;
            for (var i=0, len = pckry.items.length; i < len; i++ ) {
                var item = pckry.items[i];
                tabIndex = $( item.element ).attr('id');
                itemsByTabIndex[tabIndex] = item;
            }
            // overwrite packery item order
            i = 0; len = storedSortOrder.length;
            var j = 0;
            for (; i < len; i++) {
                tabIndex = storedSortOrder[i];
                if (itemsByTabIndex[tabIndex] !== undefined) {
                   pckry.items[j] = itemsByTabIndex[tabIndex];
                   j++;
                }
            }
        }

        // ----- packery setup ----- //
        // optim de perf : on Ã©vite au navigateur de dessiner les blocs
        // avant qu'ils aient pris leur place finale
        $('.panel').show();

        // trigger initial layout
        $container.packery();

        var $itemElems = $($container.packery('getItemElements') );
        $itemElems.draggable({
            handle: ".panel-heading",
            containment: "parent"
        });
        $container.packery( 'bindUIDraggableEvents', $itemElems );

        var saveTimeout = null;
        var saveTimeoutMilliseconds = 1000;

        function orderItems() {

            // First cancel previous timeouts
            clearTimeout(saveTimeout);

            var itemElems = pckry.getItemElements();
            // reset / empty oder array
            sortOrder.length = 0;
            for (var i=0; i< itemElems.length; i++) {
                sortOrder[i] = itemElems[i].getAttribute("id");
            }

            // Init a new timemout
            if ($('.panel.loading').length == 0) {
                saveTimeout = setTimeout(function() {
                    $.post("/api/1.0/user/preferences", {
                        id: <?php echo $this->user['ID_UTILISATEUR'] ?>,
                        preferences: {
                            'DASHBOARD_BLOCS': sortOrder
                        }
                    });
                }, saveTimeoutMilliseconds);
            }
        }

        $container.packery( 'on', 'layoutComplete', orderItems );
        //$container.packery( 'on', 'dragItemPositioned', orderItems );

        $('#reinitBlocOrder').click(function() {
            $.post("/api/1.0/user/preferences", {
                id: <?php echo $this->user['ID_UTILISATEUR'] ?>,
                preferences: {
                    'DASHBOARD_BLOCS': null
                }
            }, function() {
                window.location.reload();
            });
        });

        $(".panel-heading .icon").click(function() {
            var $self = $(this);
            var $panel = $self.parents('.panel');
            $panel.toggleClass('folded');
            if ($self.hasClass('icon-chevron-right')) {
                $self.removeClass('icon-chevron-right').addClass('icon-chevron-down');
                if ($panel.hasClass('empty') && !$panel.hasClass('loading')) {
                    $panel.find('.panel-body img').show();
                    loadBloc($panel);
                } else {
                    $panel.find('.panel-body').show();
                    $container.packery('fit', $panel.get(0));
                }
            } else {
                $self.removeClass('icon-chevron-down').addClass('icon-chevron-right');
                $panel.find('.panel-body').hide();
                $container.packery('fit', $panel.get(0));
            }
        });

    });
</script>
